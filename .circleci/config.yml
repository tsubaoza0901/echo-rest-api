version: 2

defaults: &defaults
  docker:
    - image: golang:stretch
    - image: circleci/mysql:5.7.22
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  working_directory: /workspace
  environment:
    GOPATH: /
    GOCACHE: /.cache/go-build
    GO111MODULE: 'on'

jobs:
  setup-build:
    <<: *defaults
    steps:
      - run: go env
      - checkout
      - restore_cache:
          keys:
            - go-module-cache-v1-{{ checksum "/workspace/server_side/go.sum" }}
            - go-module-cache-v1-
      - run:
          working_directory: /workspace/server_side
          command: go mod download
      - save_cache:
          key: go-module-cache-v1-{{ checksum "/workspace/server_side/go.sum" }}
          paths:
            - /pkg/mod/cache
      - save_cache:
          key: workspace-v1-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /workspace

  test:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - workspace-v1-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - go-module-cache-v1-{{ checksum "/workspace/server_side/go.sum" }}
            - go-module-cache-v1-
      - restore_cache:
          keys:
            - go-build-cache-v1-{{ .Branch }}-{{ .Revision }}
            - go-build-cache-v1-{{ .Branch }}
            - go-build-cache-v1
      - run:
          name: Wait for DB
          working_directory: /workspace/server_side
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          working_directory: /workspace/server_side
          command: go test -v ./...
      - save_cache:
          key: go-build-cache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - /.cache/go-build

workflows:
  version: 2
  test:
    jobs:
      - setup-build
      - test:
          requires:
            - setup-build

# version: 2.1
# executors:
#   default-settings:
#     docker:
#       - image: circleci/golang:1.13.5
#         user: root
#       - image: circleci/mysql:5.7.22
#         environment:
#           MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#           MYSQL_DATABASE: ${MYSQL_DATABASE}
#           MYSQL_USER: ${MYSQL_USER}
#           MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#     working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}/echo-rest-api/server_side
#     environment:
#       GO111MODULE: "on"
# jobs:
#   setup:
#     executor:
#       name: default-settings
#     steps:
#       - checkout
#       - restore_cache:
#           name: Restore go modules cache
#           keys:
#               - v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}
#       - run:
#           name: Vendoring
#           command: go mod download
#       - save_cache:
#           name: Save go modules cache
#           key: v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}
#           paths:
#               - /go/pkg/mod/cache
#       - persist_to_workspace:
#           root: /go
#           paths:
#             - src
#             - bin
#             - pkg/mod/cache

#   build:
#     executor:
#       name: default-settings
#     steps:
#       - checkout
#       - run: go test -v

# workflows:
#   golang-workflow:
#     jobs:
#       - setup
#       - build:
#           requires:
#             - setup


# version: 2.1
# executors:
#   build:
#     parameters:
#       go-version:
#         type: string
#     docker:
#       - image: circleci/golang:<< parameters.go-version >>
#         environment:
#           GO111MODULE: "on"
#       - image: circleci/mysql:5.7.22
#         environment:
#           MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#           MYSQL_DATABASE: ${MYSQL_DATABASE}
#           MYSQL_USER: ${MYSQL_USER}
#           MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#     working_directory: /go/src
# commands:
#   go_mod_download:
#     steps:
#       - restore_cache:
#           name: Restore go modules cache
#           keys:
#             - go-modules-{{ checksum "go.sum" }}

#       - run: go mod download

#       - save_cache:
#           name: Save go modules cache
#           key: go-modules-{{ checksum "go.sum" }}
#           paths:
#             - "/go/pkg/mod"
# jobs:
#   build:
#     parameters:
#       go-version:
#         type: string
      # golangci-lint-version:
      #   type: string

    # executor:
    #   name: build
    #   go-version: << parameters.go-version >>

    # steps:
    #   - checkout
      # - go_mod_download
      # - run:
      #     name: Wait for DB
      #     command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      # - run:
      #     name: Install GolangCI-Lint
      #     command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v<< parameters.golangci-lint-version >>

      # - run:
      #     name: Run GolangCI-Lint
      #     command: ./bin/golangci-lint run --tests --disable-all --enable=goimports --enable=golint --enable=govet --enable=errcheck --enable=staticcheck
#       - run:
#           name: Run Tests
#           command: go test -v ./server_side

# workflows:
#   golang-workflow:
#     jobs:
#       - build:
#           go-version: "1.12.1"
          # golangci-lint-version: "1.15.0"