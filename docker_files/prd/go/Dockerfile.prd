FROM golang:latest as builder

# Application working directory ( Created if it doesn't exist )
WORKDIR /go/src/app/server_side

# 以下、本番用の固定？記述-----------------------------------

# Copy all files ignoring those specified in dockerignore（本番用）
COPY ./server_side /go/src/app/server_side/

# Go Modulesの有効化
ENV GO111MODULE=on

# go.modおよびgo.sumを元にしたパッケージのダウンロード
RUN go mod download

# なぜかgooseだけ、Go modulesが機能しないため、個別インストール
RUN go get bitbucket.org/liamstask/goose/cmd/goose

# # Installing custom packages from github
# RUN go get -d github.com/prometheus/client_golang/prometheus/promhttp
# Execute instructions on a new layer on top of current image. Run in shell.
RUN CGO_ENABLED=0 go build -a -installsuffix cgo --ldflags "-s -w" -o /go/src/app/server_side/main

FROM alpine:3.9.4

# metadata for better organization
LABEL app="echo-rest-api"
LABEL environment="production"
# Set workdir on current image
WORKDIR /app
# Leverage a separate non-root user for the application
RUN adduser -S -D -H -h /app appuser
# Change to a non-root user
USER appuser
# Add artifact from builder stage
COPY --from=builder /go/src/app/server_side/main /app/
# Expose port to host
EXPOSE 8080
# Run software with any arguments
ENTRYPOINT ["./main"]
